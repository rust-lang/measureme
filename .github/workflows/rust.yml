name: Rust

on:
  push:
    branches: [
      master,
      auto,   # used for bors
      try     # used for bors
    ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        rust: [ stable, beta, nightly ]
        include:
          - rust: nightly
            check_cfg: '-Zcheck-cfg'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Rust toolchain
      run: |
        rustup toolchain install --no-self-update --profile minimal ${{ matrix.rust }}
        rustup default ${{ matrix.rust }}
        # Add a big endian target so we can check that everything at least
        # compiles on big endian.
        rustup target add --toolchain ${{ matrix.rust }} powerpc64-unknown-linux-gnu
    - name: Build
      run: cargo build --verbose --all ${{ matrix.check_cfg }}
    - name: Run tests
      run: cargo test --verbose --all ${{ matrix.check_cfg }}
    - name: Docs
      run: cargo doc --verbose --no-deps
    - name: Check big endian
      run: cargo check --target powerpc64-unknown-linux-gnu --verbose --all

  # These jobs doesn't actually test anything, but they're only used to tell
  # bors the build completed, as there is no practical way to detect when a
  # workflow is successful listening to webhooks only.
  #
  # ALL THE PREVIOUS JOBS NEED TO BE ADDED TO THE `needs` SECTION OF THIS JOB!
  end-success:
    name: bors build finished
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event.pusher.name == 'bors' && success()
    steps:
      - name: mark the job as a success
        run: exit 0

  end-failure:
    name: bors build finished
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event.pusher.name == 'bors' && (failure() || cancelled())
    steps:
      - name: mark the job as a failure
        run: exit 1
